	Описание:
Реализовывал всё используя стандартные наборы функций laravel;
Первоначально пользователь попадает на welcome страницу и имеет доступ к регистрации и авторизации, авторизированный пользователь не может перейти на эти страницы благодаря middleware и не авторизированный на страницы с контентом;
Сделал валидацию простую на Входе и Регистрации + remember_token также logout реализованный в методе destroy LoginController'а постоянно доступный в header'e сайта(ссылка + js скрипт чтобы работала как сабмит кнопка для ближайшей формы;
По дефолту установил что каждый новый пользователь имеет роль: User;
Далее при переходе на страницу Applications middleware определяет роль пользователя и если это Manager то ему будет доступен view со всеми заявками, User'у только те которые он создавал, Если User попытается пройти на view manager'a то будет остановлен проверкой middleware;
User имеет способность Index(own), Create, Show заявлений
a Manager Index(all), Edit(status,comment);
Когда User создаёт заявление статус автоматически New и во view где show его заявки стоит условие пока New статус указан на Pending review..(ожидание рассмотрения)При его изменении просто выводит значение статуса
Создал так же отношение один ко многим таблицу Statuses(id, status) к Applications(status_id) поэтому имею доступ к модели Status.

manager: 123@mail.ru 123123123
user1: dmitry@mail.ru 45644564
user2: dychovny@gmail.com 123123123




	То что не смог решить:
-User может ввести в адресную строку id любого заявления и получить его
-Сделать обязательным поле comment если изменяется селектор статусов (временное решение: сделал дефолтное значение status всех заявок на New и установил на textarea(comment) атрибут require)
-Пока не разобрался в Postman написал пару запросов только
-На Unit тесты и Docker не хватает знаний и времени

